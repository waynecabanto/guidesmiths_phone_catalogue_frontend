{"version":3,"sources":["components/Header.js","components/Loading.js","redux/actions/getPhonesActions.js","redux/actions/types.js","components/PhoneCard.js","components/PhonesList.js","components/PhoneDetails.js","App.js","redux/reducers/getPhonesReducer.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["useStyles","makeStyles","typographyStyles","flex","Header","classes","AppBar","position","Toolbar","Typography","className","theme","root","width","marginTop","Loading","LinearProgress","phoneClicked","clicked","type","payload","getPhonesSuccess","getPhonesLoading","getPhonesFailed","err","display","details","flexDirection","content","cover","height","controls","alignItems","paddingLeft","spacing","paddingBottom","playIcon","PhoneCard","props","dispatch","useDispatch","Card","variant","CardHeader","title","phone","name","subheader","manufacturer","CardContent","component","color","price","screen","Button","onClick","CardMedia","image","imageFileName","PhonesList","state","timer_done","this","getPhones","push","to","failed","success","Grid","container","phones","map","item","xs","sm","md","alignContent","initialTime","direction","timeToUpdate","checkpoints","time","callback","setState","Component","connect","selected_phone","loading","axios","get","then","res","data","catch","media","paddingTop","button","marginBottom","items","processor","ram","description","App","exact","path","render","PhoneDetails","initialState","allReducers","combineReducers","action","middleware","thunk","store","createStore","allReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2791ee98.chunk.js","sourcesContent":["import React from 'react'\r\nimport { AppBar, Toolbar, Typography } from '@material-ui/core'\r\nimport AcUnitIcon from '@material-ui/icons/AcUnit';\r\nimport {makeStyles} from '@material-ui/styles';\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    typographyStyles: {\r\n        flex: 1\r\n    }\r\n}));\r\nfunction Header() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                <Typography className={classes.typographyStyles}>\r\n                    Wayne Cabanto: GuideSmiths Frontend Coding Challenge\r\n                </Typography>\r\n                <AcUnitIcon/>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: 100\r\n  },\r\n}));\r\n\r\nexport default function Loading() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <LinearProgress />\r\n    </div>\r\n  );\r\n}\r\n","import {GET_PHONES, SELECTED_PHONE, PHONE_CLICKED, GET_PHONES_SUCCESS, GET_PHONES_LOADING, GET_PHONES_FAILED} from './types';\r\nimport axios from 'axios';\r\n\r\n\r\n//gets the information of the phone selected. this is useful for PhoneDetails component.\r\nexport const selectPhone = (phone) => {\r\n    return {\r\n        type: SELECTED_PHONE,\r\n        payload: phone\r\n    }\r\n}\r\n\r\n\r\n//this sets store to clicked so the React can know when to redirect\r\n//this gets triggered alongside with selectPhone action\r\nexport const phoneClicked = (clicked) => {\r\n    return {\r\n        type: PHONE_CLICKED,\r\n        payload: clicked\r\n    }\r\n}\r\n\r\nexport const getPhones = () => {\r\n    return function (dispatch) {\r\n        dispatch(getPhonesLoading());\r\n        axios.get('https://waynecabanto-guidesmiths.herokuapp.com/phones').then(res => {\r\n            dispatch(getPhonesSuccess());\r\n            dispatch({\r\n                type: GET_PHONES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => {\r\n            dispatch(getPhonesFailed(err));\r\n        });\r\n        \r\n    }\r\n};\r\n\r\n\r\n//updates store if the API Request is successful\r\nexport const getPhonesSuccess = () => {\r\n    return {\r\n        type: GET_PHONES_SUCCESS\r\n    }\r\n}\r\n\r\n\r\n//updates store to loading. this is useful for UI state management\r\nexport const getPhonesLoading = () => {\r\n    return {\r\n        type: GET_PHONES_LOADING\r\n    }\r\n}\r\n\r\n\r\n//updates store to failed if the API Request failed and updates state with the error message\r\nexport const getPhonesFailed = (err) => {\r\n    return {\r\n        type: GET_PHONES_FAILED,\r\n        payload: err\r\n    }\r\n}","export const GET_PHONES = 'GET_PHONES';\r\nexport const SELECTED_PHONE = 'SELECTED_PHONE';\r\nexport const PHONE_CLICKED = 'PHONE_CLICKED';\r\nexport const GET_PHONES_SUCCESS = 'GET_PHONES_SUCCESS';\r\nexport const GET_PHONES_LOADING = 'GET_PHONES_LOADING';\r\nexport const GET_PHONES_FAILED = 'GET_PHONES_FAILED';\r\n","import React from 'react'\r\nimport { makeStyles\r\n} from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\n\r\nimport {useDispatch} from 'react-redux';\r\nimport {selectPhone, phoneClicked} from '../redux/actions/getPhonesActions';\r\nimport {CardMedia} from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex'\r\n    },\r\n    details: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n    },\r\n    content: {\r\n      flex: '1 0 auto'\r\n    },\r\n    cover: {\r\n      width: 100,\r\n      height: 200\r\n    },\r\n    controls: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      paddingLeft: theme.spacing(1),\r\n      paddingBottom: theme.spacing(1),\r\n    },\r\n    playIcon: {\r\n      height: 38,\r\n      width: 38,\r\n    },\r\n  }));\r\n  \r\nfunction PhoneCard(props) {\r\n\r\n    const classes = useStyles();\r\n    //const theme = useTheme();   \r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Card className={classes.root} variant=\"outlined\">\r\n          <div className={classes.details}>\r\n            <CardHeader \r\n            title={props.phone.name} \r\n            subheader={props.phone.manufacturer}\r\n            />\r\n            <CardContent className={classes.content}>\r\n                <Typography variant=\"body2\" component=\"p\">\r\n                    {'Color: ' + props.phone.color}\r\n                </Typography>\r\n                <Typography variant=\"body2\" component=\"p\">\r\n                    {'Price: $ ' + props.phone.price}\r\n                </Typography>\r\n                <Typography variant=\"body2\" component=\"p\">\r\n                    {'Screen: ' + props.phone.screen}\r\n                </Typography>\r\n            </CardContent>\r\n            <div className={classes.controls}>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={() => {\r\n                    dispatch(selectPhone(props.phone));\r\n                    dispatch(phoneClicked(1));\r\n                }}>MORE DETAILS</Button>\r\n            </div>\r\n          </div>\r\n          <CardMedia\r\n            className={classes.cover}\r\n            image={\"https://github.com/guidesmiths/interview-code-challenges/blob/master/react/phone-catalogue/images/\"+props.phone.imageFileName+\"?raw=true\"}\r\n            title=\"Live from space album cover\"\r\n          />\r\n        </Card>\r\n      );\r\n}\r\n\r\nexport default PhoneCard;\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n//import PropTypes from 'prop-types';\r\nimport { Redirect } from 'react-router';\r\nimport Loading from './Loading';\r\nimport Timer from 'react-compound-timer';\r\n\r\n//redux\r\nimport {getPhones, phoneClicked} from '../redux/actions/getPhonesActions';\r\n//import EachPhone from './EachPhone';\r\nimport PhoneCard from './PhoneCard';\r\nimport { Grid } from '@material-ui/core';\r\n\r\n\r\n\r\n\r\nclass PhonesList extends Component {\r\n\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      timer_done: false\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.getPhones();\r\n    this.props.phoneClicked(0);\r\n  }\r\n\r\n  \r\n  \r\n\r\n  render(){\r\n\r\n    if (this.props.clicked === 1) {\r\n      return <Redirect push to=\"/details\" />;\r\n    }\r\n\r\n    if(this.props.failed && this.state.timer_done) {\r\n      return (\r\n        <div>\r\n          <h1>Request failed. Failed to load props.</h1>\r\n          <p>{'Error: ' + this.props.err}</p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if(this.props.success && this.state.timer_done) {\r\n      return (\r\n        <Grid container spacing={2}>\r\n          {this.props.phones.map((phone)=>(\r\n            <Grid item xs={12} sm={6} md={4}>\r\n            <PhoneCard phone={phone}/>\r\n            </Grid>\r\n          ))} \r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Grid container alignContent='center'>\r\n        <Grid item xs={12}>\r\n          <Timer\r\n          initialTime={1000}\r\n          direction=\"backward\"\r\n          timeToUpdate={10}\r\n          checkpoints={[\r\n              {\r\n                  time: 0,\r\n                  callback: () => this.setState({timer_done: true}),\r\n              },\r\n          ]}\r\n          >\r\n            <Loading/>\r\n          </Timer>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n\r\n  }\r\n  \r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    phones: state.getPhones.phones,\r\n    selected_phone: state.getPhones.selected_phone,\r\n    clicked: state.getPhones.clicked,\r\n    success: state.getPhones.success,\r\n    failed: state.getPhones.failed,\r\n    loading: state.getPhones.loading,\r\n    err: state.getPhones.err\r\n})\r\n\r\nexport default connect(mapStateToProps, {getPhones, phoneClicked})(PhonesList);\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\nimport { Grid, Card, CardMedia, Typography, CardContent } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n//redux\r\nimport {phoneClicked} from '../redux/actions/getPhonesActions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  media: {\r\n    height: 'auto',\r\n    paddingTop: '100%', // 16:9\r\n  },\r\n  button: {\r\n    marginBottom: 50,\r\n    marginTop: 50\r\n  },\r\n  items: {\r\n    height: '100%'\r\n  }\r\n}));\r\n\r\n\r\nfunction PhoneDetails (props){\r\n    const classes = useStyles();\r\n\r\n    if (props.clicked === 0) {\r\n      return <Redirect push to=\"/\" />;\r\n    }\r\n\r\n    return (\r\n      <Grid container spacing ={2} direction=\"column\">\r\n        <Grid container item spacing={2} >\r\n          <Grid item xs={12} md={6}>\r\n            <Card className={classes.root} variant=\"outlined\">\r\n              <CardMedia\r\n                className={classes.media}\r\n                image={\"  https://github.com/guidesmiths/interview-code-challenges/blob/master/react/phone-catalogue/images/\"+props.selected_phone.imageFileName+\"?raw=true\"}\r\n                title={props.selected_phone.name }\r\n              />\r\n            </Card> \r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Card className={classes.root} variant=\"outlined\">\r\n              <CardContent>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                  {'Name: ' + props.selected_phone.name}\r\n                </Typography>\r\n                <Typography variant=\"h6\" component=\"h2\">\r\n                  {'Manufacturer: ' + props.selected_phone.manufacturer}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\" component=\"h2\">\r\n                  {'Color: ' + props.selected_phone.color}\r\n                </Typography>\r\n                <Typography variant=\"body1\" component=\"h2\">\r\n                  {'Screen: ' + props.selected_phone.screen}\r\n                </Typography>\r\n                <Typography variant=\"body1\" component=\"h2\">\r\n                  {'Processor: ' + props.selected_phone.processor}\r\n                </Typography>\r\n                <Typography variant=\"body1\" component=\"h2\">\r\n                  {'RAM: ' + props.selected_phone.ram}\r\n                </Typography>\r\n                <Typography variant=\"body1\" component=\"h2\">\r\n                  {'Price: $' + props.selected_phone.price}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\" component=\"h2\">\r\n                  {'Description: ' + props.selected_phone.description}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n        <Button className={classes.button} variant=\"contained\" color=\"primary\" onClick={props.phoneClicked}>Back To List</Button>\r\n      </Grid>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    selected_phone: state.getPhones.selected_phone,\r\n    clicked: state.getPhones.clicked\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return{\r\n    phoneClicked: () => dispatch(phoneClicked(0))\r\n  }\r\n  \r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PhoneDetails);\r\n\r\n","import React from 'react';\n\n//Router\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\n\nimport './App.css';\n\n//components\nimport Header from './components/Header'\nimport PhonesList from './components/PhonesList';\nimport PhoneDetails from './components/PhoneDetails';\n\n//Material UI. Frontend framework or library that allows easier and faster UI designing\nimport { Grid } from '@material-ui/core';\n\nfunction App() {\n\n  return (\n    <Router>\n      <Grid container spacing ={2} direction=\"column\">\n        <Grid item >\n          <Header />\n        </Grid>\n        <Grid item container>\n          <Grid item xs={0} sm={1}/>\n          <Grid item xs={12} sm={10}>\n            <Route exact path=\"/\" render={props => (\n            <PhonesList/>\n            )} />\n            <Route path=\"/details\" component = {PhoneDetails}/>\n          </Grid>\n          <Grid item xs={0} sm={1}/>\n        </Grid>\n      </Grid>\n    </Router>\n  );\n}\n\nexport default App;\n\n\n","import {GET_PHONES, SELECTED_PHONE, PHONE_CLICKED, GET_PHONES_SUCCESS, GET_PHONES_LOADING, GET_PHONES_FAILED} from '../actions/types';\r\n\r\nconst initialState = {\r\n    phones: [],\r\n    selected_phone: {},\r\n    clicked: 0,\r\n    failed: false,\r\n    success: false,\r\n    loading: false,\r\n    err: ''\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_PHONES:\r\n            return {\r\n                ...state,\r\n                phones: action.payload\r\n            }\r\n        case SELECTED_PHONE:\r\n            return{\r\n                ...state,\r\n                selected_phone: action.payload\r\n            }\r\n        case PHONE_CLICKED: \r\n            return{\r\n                ...state,\r\n                clicked: action.payload\r\n            }\r\n        case GET_PHONES_SUCCESS: \r\n            return{\r\n                ...state,\r\n                success: true,\r\n                failed: false,\r\n                loading: false\r\n            }\r\n        case GET_PHONES_LOADING: \r\n            return{\r\n                ...state,\r\n                success: false,\r\n                failed: false,\r\n                loading: true\r\n            }\r\n        case GET_PHONES_FAILED: \r\n            return{\r\n                ...state,\r\n                success: false,\r\n                failed: true,\r\n                loading: false,\r\n                err: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport getPhonesReducer from './getPhonesReducer';\r\n\r\nconst allReducers = combineReducers({\r\n    getPhones: getPhonesReducer\r\n});\r\n\r\nexport default allReducers;","import {createStore, compose, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport allReducer from './reducers';\r\n\r\n/* THUNK allows us to call a function or perform a function if an action is called.*/\r\nconst middleware = [thunk];\r\n\r\n\r\nconst initialState = {};\r\n\r\nconst store = createStore(\r\n  allReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n  );\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>  \n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}